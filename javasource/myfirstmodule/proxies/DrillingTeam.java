// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class DrillingTeam
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject drillingTeamMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.DrillingTeam";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Number("Number"),
		Leader("Leader"),
		Outline("Outline"),
		DrillingTeam_BH("MyFirstModule.DrillingTeam_BH");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DrillingTeam(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.DrillingTeam"));
	}

	protected DrillingTeam(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject drillingTeamMendixObject)
	{
		if (drillingTeamMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.DrillingTeam", drillingTeamMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.DrillingTeam");

		this.drillingTeamMendixObject = drillingTeamMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DrillingTeam.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.DrillingTeam initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.DrillingTeam.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.DrillingTeam initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.DrillingTeam(context, mendixObject);
	}

	public static myfirstmodule.proxies.DrillingTeam load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.DrillingTeam.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.DrillingTeam> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.DrillingTeam> result = new java.util.ArrayList<myfirstmodule.proxies.DrillingTeam>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.DrillingTeam" + xpathConstraint))
			result.add(myfirstmodule.proxies.DrillingTeam.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Number
	 */
	public final java.lang.String getNumber()
	{
		return getNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of Number
	 */
	public final java.lang.String getNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Number.toString());
	}

	/**
	 * Set value of Number
	 * @param number
	 */
	public final void setNumber(java.lang.String number)
	{
		setNumber(getContext(), number);
	}

	/**
	 * Set value of Number
	 * @param context
	 * @param number
	 */
	public final void setNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String number)
	{
		getMendixObject().setValue(context, MemberNames.Number.toString(), number);
	}

	/**
	 * @return value of Leader
	 */
	public final java.lang.String getLeader()
	{
		return getLeader(getContext());
	}

	/**
	 * @param context
	 * @return value of Leader
	 */
	public final java.lang.String getLeader(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Leader.toString());
	}

	/**
	 * Set value of Leader
	 * @param leader
	 */
	public final void setLeader(java.lang.String leader)
	{
		setLeader(getContext(), leader);
	}

	/**
	 * Set value of Leader
	 * @param context
	 * @param leader
	 */
	public final void setLeader(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String leader)
	{
		getMendixObject().setValue(context, MemberNames.Leader.toString(), leader);
	}

	/**
	 * @return value of Outline
	 */
	public final java.lang.String getOutline()
	{
		return getOutline(getContext());
	}

	/**
	 * @param context
	 * @return value of Outline
	 */
	public final java.lang.String getOutline(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Outline.toString());
	}

	/**
	 * Set value of Outline
	 * @param outline
	 */
	public final void setOutline(java.lang.String outline)
	{
		setOutline(getContext(), outline);
	}

	/**
	 * Set value of Outline
	 * @param context
	 * @param outline
	 */
	public final void setOutline(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String outline)
	{
		getMendixObject().setValue(context, MemberNames.Outline.toString(), outline);
	}

	/**
	 * @return value of DrillingTeam_BH
	 */
	public final myfirstmodule.proxies.BH getDrillingTeam_BH() throws com.mendix.core.CoreException
	{
		return getDrillingTeam_BH(getContext());
	}

	/**
	 * @param context
	 * @return value of DrillingTeam_BH
	 */
	public final myfirstmodule.proxies.BH getDrillingTeam_BH(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.BH result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DrillingTeam_BH.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.BH.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DrillingTeam_BH
	 * @param drillingteam_bh
	 */
	public final void setDrillingTeam_BH(myfirstmodule.proxies.BH drillingteam_bh)
	{
		setDrillingTeam_BH(getContext(), drillingteam_bh);
	}

	/**
	 * Set value of DrillingTeam_BH
	 * @param context
	 * @param drillingteam_bh
	 */
	public final void setDrillingTeam_BH(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.BH drillingteam_bh)
	{
		if (drillingteam_bh == null)
			getMendixObject().setValue(context, MemberNames.DrillingTeam_BH.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DrillingTeam_BH.toString(), drillingteam_bh.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return drillingTeamMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.DrillingTeam that = (myfirstmodule.proxies.DrillingTeam) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.DrillingTeam";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
